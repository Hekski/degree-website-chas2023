---
import BaseLayout from '../../layouts/BaseLayout.astro';

const title = 'Blog';
const description = 'Latest articles.';
const permalink = `${Astro.site.href}blog`;

let allPosts = await Astro.glob('../../data/blog-posts/*.md');
allPosts = await Promise.all(allPosts.map(async post => {
  const content = await post.Content({},{}, []);
  return {
    ...post,
    content,
  };
}));

// allPosts = allPosts.sort((a, b) => new Date(b.frontmatter.publishDate).valueOf() - new Date(a.frontmatter.publishDate).valueOf());

---

<BaseLayout title={title} description={description} permalink={permalink} current="blog">
  <div class="container">
    <h1>Thesis</h1>
  
    <div class="post-container">
      <section>
        {allPosts.map((post, index) => {
          const href = `/blog/${post.file.split('/').pop().split('.').shift()}`;
          return (
            <div class="post-item">
              <h2>
                <a href={href}>{post.frontmatter.title}</a>
                </h2>
                <div class="post-item-footer">
                  <span class="post-item-date">â€” {post.frontmatter.publishDate}</span>
                  </div>
                  </div>
                  )
                })}
      </section>
      <section class="post-data">
        {allPosts.map((post, index) => {
          console.log("postData", post);
          return (
            <article>
              <Fragment set:html={post.content.props.children}/>
            </article>
          )
        })}
      </section>
    </div>
  </div>
</BaseLayout>

<style>
  .post-container {
    display: flex;
    flex-direction: row;
  }

  .post-data {
    width: 100%;
  }

  h2,
  .post-item-footer {
    font-family: var(--font-family-sans);
    font-weight: 700;
  }

  .post-item-date {
    color: var(--text-secondary);
    text-align: left;
    text-transform: uppercase;
    margin-right: 16px;
  }

  hr {
    margin: 60px auto;
  }
</style>